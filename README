meteor/opencv-based worm tracking.

the user-interface is implemented in javascript through meteor,
while the analysis is undertaken server-side in python and opencv,
using mongodb as a common layer between. they are split into
the `watch' and `worms' components, respectively.

we maintain two database collections:

`recording'
 - filename
 - preview                      # base64-encoded PNG at time0 
 - composite                    # average frame

`worm'
 - recording
 - contourFlow                  # [[t,[[x,y], ...]], ...] (8kb/frame)
 - centerFlow                   # [[t,x,y], ...]
 - amountOfMotion               # px
 - avgSpeed                     # px/second
 - bb                           # [x,y,w,h] (at time0)
 - contour                      # [[x,y], ...] (at time0)

and use mongodb as a poor-man's message queue to communicate between
meteor/javascript and python, through a third collection:

`request':
 - recording
 - bb
 - unprocessed
 - contour
 - contourOk
 - trackingOk

which allows user-guided identification of worms within a recording.